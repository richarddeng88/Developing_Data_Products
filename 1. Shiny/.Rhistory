source('C:/Users/Richard/Desktop/Rcourse/Developing_Data_Products/1. Shiny/05 11 shiny dashboard design.R', echo=TRUE)
library(shiny);library(shinydashboard)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title= "NYC Citibike Ridership",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month."
)
),
dropdownMenu(type = "notifications",
notificationItem(
text = "5 new users today",
icon("users")
)
),
dropdownMenu(type = "tasks", badgeStatus = "success",
taskItem(value = 90, color = "green",
"Documentation"
)
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",label = "Search..."),
menuItem("Geo",tabName = "geo",icon=icon("calendar")),
menuItem("Exploratory Analysis", tabName = "eda", icon = icon("dashboard")),
menuItem("Modeling", tabName = "modeling", icon = icon("th"),badgeLabel = "new", badgeColor = "green"),
menuItem("Source code", icon = icon("file-code-o"),
href = "https://github.com/richarddeng88/citibike")
)
),
body <- dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "eda",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "modeling",
h2("Widgets tab content")
),
# Third tab content
tabItem(tabName = "geo",
h2("Geographic tab content"),
tabPanel("Interactive map",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")
),
leafletOutput("map", width="100%", height="100%")
)
)
)
)
)
)
server <- function(input, output) {
# create a map
output$map <- renderLeaflet({
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -93.85, lat = 37.45, zoom = 4)
})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui=ui, server=server)
library(shiny);library(shinydashboard)
library(leaflet)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title= "NYC Citibike Ridership",
dropdownMenu(type = "messages",
messageItem(
from = "Sales Dept",
message = "Sales are steady this month."
)
),
dropdownMenu(type = "notifications",
notificationItem(
text = "5 new users today",
icon("users")
)
),
dropdownMenu(type = "tasks", badgeStatus = "success",
taskItem(value = 90, color = "green",
"Documentation"
)
)
),
sidebar <- dashboardSidebar(
sidebarMenu(
sidebarSearchForm(textId = "searchText", buttonId = "searchButton",label = "Search..."),
menuItem("Geo",tabName = "geo",icon=icon("calendar")),
menuItem("Exploratory Analysis", tabName = "eda", icon = icon("dashboard")),
menuItem("Modeling", tabName = "modeling", icon = icon("th"),badgeLabel = "new", badgeColor = "green"),
menuItem("Source code", icon = icon("file-code-o"),
href = "https://github.com/richarddeng88/citibike")
)
),
body <- dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "eda",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "modeling",
h2("Widgets tab content")
),
# Third tab content
tabItem(tabName = "geo",
h2("Geographic tab content"),
tabPanel("Interactive map",
div(class="outer",
tags$head(
# Include our custom CSS
includeCSS("styles.css"),
includeScript("gomap.js")
),
leafletOutput("map", width="100%", height="100%")
)
)
)
)
)
)
server <- function(input, output) {
# create a map
output$map <- renderLeaflet({
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
setView(lng = -93.85, lat = 37.45, zoom = 4)
})
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui=ui, server=server)
